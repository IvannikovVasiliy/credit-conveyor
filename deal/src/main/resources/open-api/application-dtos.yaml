openapi: 3.0.3
info:
  title: Swagger Deal - OpenAPI 3.0
  version: 1.0.11
servers:
  - url: https://localhost:8081/v1
tags:
  - name: deal
paths:
  /v1/deal/application:
    post:
      tags:
        - deal
      summary: calculate possible credit conditions.
      operationId: postCalculationApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoanApplicationRequestDTO'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                format: List<LoanOfferDTO>
                items:
                  $ref: '#/components/schemas/LoanOfferDTO'
  /v1/deal/offer:
    put:
      tags:
        - deal
      summary: choose 1 offer
      operationId: putOffer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoanOfferDTO'
      responses:
        '200':
          description: successful operation
  /v1/deal/calculate/{applicationId}:
    put:
      tags:
        - deal
      summary: finish registration and calculate total credit amount
      operationId: putApplicationById
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: long
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FinishRegistrationRequestDTO'
      responses:
        '200':
          description: successful operation
#  /v2/deal/offer:
#    put:
#      tags:
#        - deal-v-2-controller
#      operationId: chooseOffer
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/LoanOfferDTO'
#          required: true
#      responses:
#        '404':
#          description: Not Found,
#          content:
#            '*/*':
#              schema:
#                $ref: '#/components/schemas/MessageInfoDto'
#        '409':
#          description: Conflict
#          content:
#            '*/*':
#              schema:
#                $ref: '#/components/schemas/MessageInfoDto'
#        '400':
#          description: Bad Request,
#          content:
#            '*/*':
#              schema:
#                $ref: '#/components/schemas/MessageInfoDto'
#                oneOf:
#                  - $ref: '#/components/schemas/ErrorResponseValidation'
#                  - $ref: '#/components/schemas/FinishRegistrationRequestDTO'
#                  - $ref: '#/components/schemas/MessageInfoDto'
#        '500':
#          description: Internal Server Error
#          content:
#            '*/*':
#              schema:
#                $ref: '#/components/schemas/MessageInfoDto'
#        '200':
#          description: OK
##  /v2/deal/calculate/{applicationId}:
##    put:
##      tags:
##        - deal-v-2-controller
##      operationId: calculateByAppId,
##      parameters:
##        - name: applicationId
##          in: path
##          required: true
##          schema:
##            type: integer
##            format: int64
##      requestBody:
##        content:
##          application/json:
##            schema:
##              $ref: '#/components/schemas/FinishRegistrationRequestDTO'
##        required: true
##      responses:
##        '409':
##          description: Conflict
##          content:
##            '*/*':
##              schema:
##                $ref: '#/components/schemas/MessageInfoDto'
##        '400':
##          description: Bad Request,
##          content:
##            '*/*':
##              schema:
#                oneOf:
#                  - $ref: '#/components/schemas/ErrorResponseValidation'
#                  - $ref: '#/components/schemas/MessageInfoDto'
##        '500':
##          description: Internal Server Error
##          content:
##            '*/*':
##              schema:
##                $ref: '#/components/schemas/MessageInfoDto'
##        '404':
##          description: Not Found,
##          content:
##            '*/*':
##              schema:
##                $ref: '#/components/schemas/MessageInfoDto'
##        '200':
##          description: OK
#  /v2/deal/admin/application/{applicationId}/status:
#    put:
#      tags:
#        - admin-v-2-controller
#      operationId: updateStatusByApplicationId,
#      parameters:
#        - name: applicationId
#          in: path
#          required: true
#          schema:
#            type: integer
#            format: int64
#      responses:
#        '409':
#          description: Conflict
#          content:
#            '*/*':
#              schema:
#                $ref: '#/components/schemas/MessageInfoDto'
#        '400':
#          description: Bad Request,
#          content:
#            '*/*':
#              schema:
#                oneOf:
#                  - $ref: '#/components/schemas/ErrorResponseValidation'
#                  - $ref: '#/components/schemas/MessageInfoDto'
#        '500':
#          description: Internal Server Error
#          content:
#            '*/*':
#              schema:
#                $ref: '#/components/schemas/MessageInfoDto'
#        '404':
#          description: Not Found,
#          content:
#            '*/*':
#              schema:
#                $ref: '#/components/schemas/MessageInfoDto'
#        '200':
#          description: OK
#  /v2/deal/document/{applicationId}/sign:
#    post:
#      tags:
#        - document-v-2-controller
#      operationId: signDocuments,
#      parameters:
#        - name: applicationId
#          in: path
#          required: true
#          schema:
#            type: integer
#            format: int64
#      responses:
#        '409':
#          description: Conflict
#          content:
#            '*/*':
#              schema:
#                $ref: '#/components/schemas/MessageInfoDto'
#        '400':
#          description: Bad Request,
#          content:
#            '*/*':
#              schema:
#                oneOf:
#                  - $ref: '#/components/schemas/ErrorResponseValidation'
#                  - $ref: '#/components/schemas/MessageInfoDto'
#        '500':
#          description: Internal Server Error
#          content:
#            '*/*':
#              schema:
#                $ref: '#/components/schemas/MessageInfoDto'
#        '404':
#          description: Not Found,
#          content:
#            '*/*':
#              schema:
#                $ref: '#/components/schemas/MessageInfoDto'
#        '200':
#          description: OK
#  /v2/deal/document/{applicationId}/send:
#    post:
#      tags:
#        - document-v-2-controller
#      operationId: sendDocuments,
#      parameters:
#        - name: applicationId
#          in: path
#          required: true
#          schema:
#            type: integer
#            format: int64
#      responses:
#        '409':
#          description: Conflict
#          content:
#            '*/*':
#              schema:
#                $ref: '#/components/schemas/MessageInfoDto'
#        '400':
#          description: Bad Request,
#          content:
#            '*/*':
#              schema:
#                oneOf:
#                  - $ref: '#/components/schemas/ErrorResponseValidation'
#                  - $ref: '#/components/schemas/MessageInfoDto'
#        '500':
#          description: Internal Server Error
#          content:
#            '*/*':
#              schema:
#                $ref: '#/components/schemas/MessageInfoDto'
#        '404':
#          description: Not Found,
#          content:
#            '*/*':
#              schema:
#                $ref: '#/components/schemas/MessageInfoDto'
#        '200':
#          description: OK
#  /v2/deal/document/{applicationId}/code:
#    post:
#      tags:
#        - document-v-2-controller
#      operationId: signAllDocuments,
#      parameters:
#        - name: applicationId
#          in: path
#          required: true
#          schema:
#            type: integer
#            format: int64
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/VerifyCodeDTO'
#        required: true
#      responses:
#        '409':
#          description: Conflict
#          content:
#            '*/*':
#              schema:
#                $ref: '#/components/schemas/MessageInfoDto'
#        '400':
#          description: Bad Request,
#          content:
#            '*/*':
#              schema:
#                oneOf:
#                  - $ref: '#/components/schemas/ErrorResponseValidation'
#                  - $ref: '#/components/schemas/MessageInfoDto'
#        '500':
#          description: Internal Server Error
#          content:
#            '*/*':
#              schema:
#                $ref: '#/components/schemas/MessageInfoDto'
#        '404':
#          description: Not Found,
#          content:
#            '*/*':
#              schema:
#                $ref: '#/components/schemas/MessageInfoDto'
#        '200':
#          description: OK
#  /v2/deal/application:
#    post:
#      tags:
#        - document-v-2-controller
#      operationId: postApplication,
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/LoanApplicationRequestDTO'
#        required: true
#      responses:
#        '409':
#          description: Conflict
#          content:
#            '*/*':
#              schema:
#                $ref: '#/components/schemas/MessageInfoDto'
#        '400':
#          description: Bad Request,
#          content:
#            '*/*':
#              schema:
#                oneOf:
#                  - $ref: '#/components/schemas/ErrorResponseValidation'
#                  - $ref: '#/components/schemas/MessageInfoDto'
#        '500':
#          description: Internal Server Error
#          content:
#            '*/*':
#              schema:
#                $ref: '#/components/schemas/MessageInfoDto'
#        '404':
#          description: Not Found,
#          content:
#            '*/*':
#              schema:
#                $ref: '#/components/schemas/MessageInfoDto'
#        '200':
#          description: OK,
#          content:
#            '*/*':
#              schema:
#                type: array
#                items:
#                  $ref: '#/components/schemas/LoanOfferDTO'
#  /v2/deal/admin/application:
#    get:
#      tags:
#        - admin-v-2-controller
#      operationId: getAllApplications,
#      parameters:
#        - name: page
#          in: query
#          required: true
#          schema:
#            $ref: '#/components/schemas/PageDto'
#      responses:
#        '409':
#          description: Conflict
#          content:
#            '*/*':
#              schema:
#                $ref: '#/components/schemas/MessageInfoDto'
#        '400':
#          description: Bad Request,
#          content:
#            '*/*':
#              schema:
#                oneOf:
#                  - $ref: '#/components/schemas/ErrorResponseValidation'
#                  - $ref: '#/components/schemas/MessageInfoDto'
#        '500':
#          description: Internal Server Error
#          content:
#            '*/*':
#              schema:
#                $ref: '#/components/schemas/MessageInfoDto'
#        '404':
#          description: Not Found,
#          content:
#            '*/*':
#              schema:
#                $ref: '#/components/schemas/MessageInfoDto'
#        '200':
#          description: OK,
#          content:
#            '*/*':
#              schema:
#                type: array
#                items:
#                  $ref: '#/components/schemas/LoanApplicationResponseDto'
#  /v2/deal/admin/application/{applicationId}:
#    get:
#      tags:
#        - admin-v-2-controller
#      operationId: getApplicationById,
#      parameters:
#        - name: applicationId
#          in: path
#          required: true
#          schema:
#            type: integer
#            format: int64
#      responses:
#        '409':
#          description: Conflict
#          content:
#            '*/*':
#              schema:
#                $ref: '#/components/schemas/MessageInfoDto'
#        '400':
#          description: Bad Request,
#          content:
#            '*/*':
#              schema:
#                oneOf:
#                  - $ref: '#/components/schemas/ErrorResponseValidation'
#                  - $ref: '#/components/schemas/MessageInfoDto'
#        '500':
#          description: Internal Server Error
#          content:
#            '*/*':
#              schema:
#                $ref: '#/components/schemas/MessageInfoDto'
#        '404':
#          description: Not Found,
#          content:
#            '*/*':
#              schema:
#                $ref: '#/components/schemas/MessageInfoDto'
#        '200':
#          description: OK,
#          content:
#            '*/*':
#              schema:
#                $ref: '#/components/schemas/LoanApplicationResponseDto'
components:
  schemas:
    MessageInfoDto:
      type: object
      properties:
        errorCode:
          type: integer
          format: int32
        respCode:
          type: integer
          format: int32
        message:
          type: string
#    ErrorResponseValidation:
#      type: object
#      properties:
#        violations:
#          type: array
#          items:
#            $ref: '#/components/schemas/Violation'
#    Violation:
#      type: object
#      properties:
#        fieldName:
#          type: string
#        message:
#          type: string
    LoanApplicationRequestDTO:
      required:
        - amount
        - term
        - firstName
        - lastName
        - birthdate
        - passportSeries
        - passportNumber
      type: object
      properties:
        amount:
          type: number
          format: BigDecimal
          example: 10000
          minimum: 10000
        term:
          type: integer
          example: 6
          minimum: 6
        firstName:
          type: string
          example: Ivan
        lastName:
          type: string
          example: Ivanov
        middleName:
          type: string
          example: Ivanovich
        email:
          type: string
          example: qwerty@gmail.com
          pattern: '[\w\.]{2,50}@[\w\.]{2,20}'
        birthdate:
          type: string
          format: date
          example: 2000-01-01
        passportSeries:
          type: string
          example: 1234
          minimum: 4
          maximum: 4
        passportNumber:
          type: string
          example: 123456
          minimum: 6
          maximum: 6
#    LoanApplicationResponseDto:
#      type: object
#      properties:
#        amount:
#          type: number
#        term:
#          type: integer
#          format: int32
#        firstName:
#          type: string
#        lastName:
#          type: string
#        middleName:
#          type: string
#        email:
#          type: string
#        birthdate:
#          type: string
#          format: date
#        passportSeries:
#          type: string
#        passportNumber:
#          type: string
    LoanOfferDTO:
      required:
        - applicationId
        - requestedAmount
        - totalAmount
        - term
        - monthlyPayment
        - rate
        - isInsuranceEnabled
        - isSalaryClient
      type: object
      format: LoanOfferDTO
      properties:
        applicationId:
          type: integer
          format: int64
        requestedAmount:
          type: number
          format: BigDecimal
          minimum: 10000
        totalAmount:
          type: number
          format: BigDecimal
          minimum: 10000
        term:
          type: integer
          minimum: 6
        monthlyPayment:
          type: number
          format: BigDecimal
        rate:
          type: number
          format: BigDecimal
        isInsuranceEnabled:
          type: boolean
        isSalaryClient:
          type: boolean
    FinishRegistrationRequestDTO:
      required:
        - gender
        - dependentAmount
        - employment
        - account
      type: object
      format: FinishRegistrationRequestDTO
      properties:
        gender:
          $ref: '#/components/schemas/Gender'
        maritalStatus:
          $ref: '#/components/schemas/MartialStatus'
        dependentAmount:
          type: integer
        passportIssueDate:
          type: string
          format: date
        passportIssueBranch:
          type: string
        employment:
          $ref: '#/components/schemas/EmploymentDTO'
        account:
          type: string
    VerifyCodeDTO:
      required:
        - sesCode
      type: object
      properties:
        sesCode:
          type: integer
          format: int32
    EmploymentDTO:
      type: object
      format: EmploymentDTO
      properties:
        employmentStatus:
          $ref: '#/components/schemas/EmploymentStatus'
        employerINN:
          type: string
        salary:
          type: number
          format: BigDecimal
        position:
          $ref: '#/components/schemas/EmploymentPosition'
        workExperienceTotal:
          type: integer
        workExperienceCurrent:
          type: integer
#    EmailMessage:
#      type: object
#      format: EmailMessage
#      properties:
#        address:
#          type: string
#        theme:
#          $ref: '#/components/schemas/Theme'
#        applicationId:
#          type: integer
#          format: int64
    Gender:
      type: string
      enum:
        - MALE
        - FEMALE
        - NON_BINARY
    MartialStatus:
      type: string
      enum:
        - MARRIED
        - DIVORCED
        - SINGLE
        - WIDOW_WIDOWER
    EmploymentStatus:
      type: string
      enum:
        - UNEMPLOYED
        - EMPLOYED
        - SELF_EMPLOYED
        - BUSINESS_OWNER
    EmploymentPosition:
      type: string
      enum:
        - WORKER
        - MID_MANAGER
        - TOP_MANAGER
        - OWNER
#    Theme:
#      type: string
#      enum:
#        - EXAMPLE
